name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]

jobs:
  
  checks:
    name: Lint, Type Check, and Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Desired Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: 22.18.0
          cache: 'yarn'

      - name: Cache root yarn cache and node_modules
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            node_modules
          key: ubuntu-latest-yarn-root-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ubuntu-latest-yarn-root-

      - name: Install root dependencies
        run: yarn install --frozen-lockfile

      - name: Cache client yarn cache and node_modules
        uses: actions/cache@v4
        with:
          path: |
            client/.yarn/cache
            client/node_modules
          key: ubuntu-latest-yarn-client-${{ hashFiles('client/yarn.lock') }}
          restore-keys: |
            ubuntu-latest-yarn-client-

      - name: Install client dependencies
        run: cd client && yarn install --frozen-lockfile

      # Raise on criticals, otherwise track through Dependabot/GitHub Security
      - name: Audit dependencies (root)
        run: yarn audit --groups dependencies --json | python3 .github/scripts/yarn_audit_critical.py

      - name: Audit dependencies (client)
        run: cd client && yarn audit --groups dependencies --json | python3 ../.github/scripts/yarn_audit_critical.py

      - name: Lint (root)
        run: yarn eslint . || true

      - name: Lint (client)
        run: cd client && yarn eslint . || true

      - name: TypeScript check (root)
        run: yarn tsc --noEmit

      - name: TypeScript check (client)
        run: cd client && yarn tsc --noEmit

  build:
    name: Build (matrix)
    runs-on: ${{ matrix.os }}
    needs: checks

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node: [22.18.0]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'

      - name: Cache root yarn cache and node_modules
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-root-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-root-

      - name: Install Python (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build tools (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3-dev

      - name: Install root dependencies
        run: yarn install --frozen-lockfile

      - name: Cache client yarn cache and node_modules
        uses: actions/cache@v4
        with:
          path: |
            client/.yarn/cache
            client/node_modules
          key: ${{ runner.os }}-yarn-client-${{ hashFiles('client/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-client-

      - name: Install client dependencies
        run: cd client && yarn install --frozen-lockfile

      - name: Rebuild native modules
        run: npm run rebuild-native

      - name: Build root
        env:
          NODE_ENV: production
        run: yarn build

      - name: Build client
        env:
          NODE_ENV: production
        run: cd client && yarn build
